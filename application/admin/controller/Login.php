<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/2/27
 * Time: 15:38
 */
namespace app\admin\controller;
use app\admin\logic\LoginLogic;
use app\admin\validate\LoginValidate;
use think\captcha\Captcha;
use think\Config;
use think\Controller;
use think\Request;
use think\Session;

/**
 * Class Login  登陆类
 * @package app\admin\controller
 */
class Login extends Controller{
    protected $request;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->request = Request::instance();

    }
    public function index(){
        $this->redirect('login');
    }
    /**
     * 登陆验证
     * @return mixed|\think\response\Json
     */
    public function login(){
        $adminId = Session::get('adminId');
        if ($adminId){
            $this->success('您已登陆！','Index/index');
        }
        if($this->request->isPost()){
            $params = $this->request->param();
            /*验证器验证*/
            $validate = new LoginValidate();
            if(!$validate->check($params)){
                return json(['status'=>0,'msg'=>$validate->getError()]);
            }
            /*读取自定义配置文件信息*/
            $salt = Config::get('salt');
            $username = $params['username'];
            $password = $params['password'];
            /*检查数据库*/
            $loginLogic = new LoginLogic();
            $result = $loginLogic->login($username,$password,$salt);
            if($result['status'] == 1){
                return json(['status'=>$result['status'],'msg'=>$result['msg']]);
            }else{
                return json(['status'=>$result['status'],'msg'=>$result['msg']]);
            }
        }
        return $this->fetch();
    }
    /**
     * @return \think\Response 验证码
     */
    public function verify(){
        /*配置验证码并输出*/
        $config = [
            'length'=>4,
            'useNotice'=>false,
            'length'=>4
        ];
        $verify = new Captcha($config);
        return  $verify->entry();
    }
    public function logout(){
        Session::clear();
        $this->redirect('login');
    }

}